using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web.Security;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Web.Services;
using System.Web.Script.Services;
using System.Data.SqlClient;
using System.Net.Mail;
using System.Web.Management;
using System.Net;
using System.IO;
public partial class BillDesk : BasePage
{
    TreeviewBind_C ObjTB = new TreeviewBind_C();
    DataTable dt = new DataTable();
    dbconnection dc = new dbconnection();
    string CName = "", regno = "", CenCode = "", labcode_main = "", Patname = "", Mobno = "";
    DateTime stDate = Date.getMinDate(), endDate = Date.getMinDate();
    Patmst_New_Bal_C contact = new Patmst_New_Bal_C();
    protected void Page_Load(object sender, EventArgs e)
    {
        
        if (!IsPostBack)
        {
            
            try
            {                

                fromdate.Text = DateTime.Now.ToShortDateString();
                todate.Text = DateTime.Now.ToShortDateString();
                txtCenter.Text = "All";
                BindGrid();
            }
            catch (Exception exc)
            {
                if (exc.Message.Equals("Exception aborted."))
                {
                    return;
                }
                else
                {
                    Response.Cookies["error"].Value = exc.Message;
                    Server.Transfer("~/ErrorMessage.aspx");
                }
            }
        }
    }
 
    void BindGrid()
    {
        try
        {
            string labcode = Convert.ToString(HttpContext.Current.Session["UnitCode"] );
            if (labcode != null && labcode != "")
            {
                this.labcode_main = labcode;
            }
            if (Session["usertype"].ToString() == "CollectionCenter")
            {

                CenCode = Session["CenterCode"].ToString();

            }
            if (txtCenter.Text != "")
            {
                CName = txtCenter.Text;
            }
            if (txtregno.Text != "")
            {
                regno = txtregno.Text;

            }
            if (txtname.Text != "")
            {
                Patname = txtname.Text;
            }
            if (txtmobileno.Text != "")
            {
                Mobno = txtmobileno.Text;
            }
            if (fromdate.Text != "" && todate.Text != "")
            {
                stDate = DateTimeConvesion.getDateFromString(fromdate.Text);
                endDate = DateTimeConvesion.getDateFromString(todate.Text);


            }
            GV_Billdesk.DataSource = contact.GetPatientInformationnew_1(CName, stDate, endDate, regno, Convert.ToInt32(Session["Branchid"]), 0, CenCode, "", this.labcode_main, Patname, Mobno, CName);
            GV_Billdesk.DataBind();
        }
        catch (Exception exc)
        {
            if (exc.Message.Equals("Exception aborted."))
            {
                return;
            }
            else
            {
                Response.Cookies["error"].Value = exc.Message;
                Server.Transfer("~/ErrorMessage.aspx");
            }
        }
    }
    protected void btnshow_Click(object sender, EventArgs e)
    {
        BindGrid();
    }
    protected void GV_Billdesk_RowEditing(object sender, GridViewEditEventArgs e)
    {
        if (e.NewEditIndex == -1)
            return;
        int PID = Convert.ToInt32(GV_Billdesk.DataKeys[e.NewEditIndex].Value);
        string FID = (GV_Billdesk.Rows[e.NewEditIndex].FindControl("Hdnfid") as HiddenField).Value;
        Response.Redirect("Paybilldesk.aspx?PID=" + PID + "&FID=" + FID, false);

    }
    protected void GV_Billdesk_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        GV_Billdesk.PageIndex = e.NewPageIndex;
        BindGrid();
    }
 
    protected void GV_Billdesk_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowIndex != -1)
        {
            try
            {
                string charges = (e.Row.FindControl("lblTestCharges") as Label).Text;
                string Discount = e.Row.Cells[15].Text;
                string Tax = e.Row.Cells[16].Text;
                charges = Convert.ToString( Convert.ToSingle(charges) + Math.Round( Convert.ToSingle(Tax)));
                int total = 0;
                if (charges != "" && charges != null && charges != "&nbsp;")
                {
                    total = Convert.ToInt32(charges);
                }
                float PaidamtA = Convert.ToSingle(e.Row.Cells[14].Text);
                float  Paidamt = Convert.ToSingle(e.Row.Cells[15].Text);
                float balance = Convert.ToSingle(e.Row.Cells[16].Text);
                if (PaidamtA < Convert.ToSingle(0))
                {
                    //e.Row.Cells[12].Text= System.Drawing.Color.Red;

                    //e.Row.ForeColor = System.Drawing.Color.White;
                    // e.Row.BackColor = System.Drawing.Color.Orange;
                    e.Row.Cells[03].Text = "<span class='btn btn-xs btn-warning' >BillCanele </span>";
                    e.Row.Cells[01].Enabled = false;
                    e.Row.Cells[0].Enabled = false;
                }
                else  if (Paidamt > Convert.ToSingle(charges))
                {
                    //e.Row.Cells[12].Text= System.Drawing.Color.Red;
                   
                    //e.Row.ForeColor = System.Drawing.Color.White;
                   // e.Row.BackColor = System.Drawing.Color.Orange;
                    e.Row.Cells[03].Text = "<span class='btn btn-xs btn-warning' >Refund</span>";
                    e.Row.Cells[01].Enabled = false;
                    e.Row.Cells[0].Enabled = false;
                }
                else if (balance > 0)
                {
                   // e.Row.ForeColor = System.Drawing.Color.White;
                   // e.Row.BackColor = System.Drawing.Color.Red;
                    e.Row.Cells[03].Text = "<span class='btn btn-xs btn-danger' >Pending</span>";
                }
                else 
                {
                   // e.Row.ForeColor = System.Drawing.Color.White;
                   // e.Row.BackColor = System.Drawing.Color.Green;
                    e.Row.Cells[03].Text = "<span class='btn btn-xs btn-success' >Done</span>";
                    e.Row.Cells[01].Enabled = false;
                    e.Row.Cells[0].Enabled = false;
                }
                
                     string CenterCode = (e.Row.FindControl("hdnCentercode") as HiddenField).Value;
                     Boolean ISBTH = Convert.ToBoolean( (e.Row.FindControl("ISBTH") as HiddenField).Value);
                     if (ISBTH == true)
                     {
                        // e.Row.ForeColor = System.Drawing.Color.White;
                        // e.Row.BackColor = System.Drawing.Color.Blue;
                         e.Row.Cells[01].Enabled = false;
                         e.Row.Cells[0].Enabled = false;
                         e.Row.Cells[03].Text = "<span class='btn btn-xs btn-primary' >IPD</span>";
                     }

                e.Row.Cells[03].ForeColor = System.Drawing.Color.Black;
                e.Row.Cells[01].ForeColor = System.Drawing.Color.Black;
                e.Row.Cells[0].ForeColor = System.Drawing.Color.Black;
                DropDownList ddl_Receipt = e.Row.FindControl("ddlReceipt") as DropDownList;

                dt = new DataTable();
                dt = contact.GetReceiptNo(Convert.ToInt32(Session["Branchid"]), Convert.ToInt32( (e.Row.FindControl("hdnPID") as HiddenField).Value));
                if (dt.Rows.Count > 0)
                {
                    ddl_Receipt.DataSource = dt;
                    ddl_Receipt.DataTextField = "ReceiptNo";
                    ddl_Receipt.DataValueField = "ReceiptNo";
                    ddl_Receipt.DataBind();
                    ddl_Receipt.Items.Insert(0, "-Receipt-");
                    ddl_Receipt.SelectedIndex = 0;
                }
            }
            catch (Exception ex)
            { }
        }
    }
    protected void GV_Billdesk_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        if (e.RowIndex == -1)
            return;
        int PID = Convert.ToInt32(GV_Billdesk.DataKeys[e.RowIndex].Value);
        
        #region MyRegion
        string sql = "";
        SqlConnection conn = DataAccess.ConInitForDC();
        SqlCommand sc = conn.CreateCommand();

        sc.CommandText = "ALTER VIEW [dbo].[VW_cshbill] AS (SELECT dbo.Cshmst.BillNo, dbo.Cshmst.BillDate, dbo.Cshmst.BillType, dbo.Cshmst.AmtReceived, " +
                          " dbo.Cshmst.Discount, dbo.Cshmst.NetPayment, RecM.AmtPaid AS AmtPaid, dbo.Cshmst.Balance, " +
                          " dbo.Cshmst.username,dbo.Cshmst.OtherCharges,dbo.patmst.RegNo, dbo.patmst.intial, dbo.patmst.Patname, " +
                          "  dbo.patmst.sex, dbo.patmst.Age, dbo.patmst.DocName, " +
                          " dbo.patmst.TelNo, dbo.DrMT.DoctorCode, dbo.DrMT.DoctorName, dbo.MainTest.Maintestname, dbo.MainTest.MTCode, " +
                          " dbo.patmstd.TestRate, dbo.PackMst.PackageName, dbo.patmstd.PackageCode, dbo.Cshmst.DisFlag, " +
                          " dbo.patmst.PUserName, dbo.patmst.PPassWord, dbo.Cshmst.Remark,dbo.patmst.MDY,dbo.patmst.Remark AS PatientRemark,dbo.patmst.patient_addr,dbo.patmst.PPID ,dbo.patmst.LBcode , Cshmst.TaxAmount, Cshmst.TaxPer, RecM.PrintCount as PrintCount,RecM.ReceiptNo ,  patmst.OtherRefDoctor, dbo.Cshmst.OtherChargeRemark FROM         patmst INNER JOIN " +
                         "   DrMT ON patmst.CenterCode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN "+
                          "  Cshmst INNER JOIN "+
                          "  MainTest INNER JOIN "+
                          "  patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON Cshmst.PID = patmstd.PID AND "+
                         "   Cshmst.Branchid = patmstd.Branchid ON patmst.PID = patmstd.PID AND patmst.Branchid = patmstd.Branchid INNER JOIN "+
                         "   RecM ON Cshmst.PID = RecM.PID AND Cshmst.BillNo = RecM.BillNo LEFT OUTER JOIN "+
                         "   PackMst ON patmstd.Branchid = PackMst.branchid AND patmstd.PackageCode = PackMst.PackageCode where DrMT.DrCheck_flag='CC' and patmst.branchid=" + Session["Branchid"].ToString() + " and Cshmst.PID=" + PID + ")";// 


        conn.Open();
        sc.ExecuteNonQuery();
        conn.Close(); conn.Dispose();
        #endregion


        Session.Add("rptsql", sql);
        Session["rptname"] = Server.MapPath("~/DiagnosticReport/Rpt_PayReceipt.rpt");
        Session["reportname"] = "CashReceipt";
        Session["RPTFORMAT"] = "pdf";

        ReportParameterClass.SelectionFormula = sql;
        string close = "<script language='javascript'>javascript:OpenReport();</script>";
        Type title1 = this.GetType();
        Page.ClientScript.RegisterStartupScript(title1, "", close);
       
    }

    public string apicall(string url)
    {
        HttpWebRequest httpreq = (HttpWebRequest)WebRequest.Create(url);

        try
        {
            HttpWebResponse httpres = (HttpWebResponse)httpreq.GetResponse();

            StreamReader sr = new StreamReader(httpres.GetResponseStream());

            string results = sr.ReadToEnd();

            sr.Close();
            return results;
        }
        catch
        {
            return "0";
        }
    }
  protected void ddlReceipt_SelectedIndexChanged(object sender, EventArgs e)
    {
        //DropDownList dd
        int RowIndex1 = ((GridViewRow)((DropDownList)sender).NamingContainer).RowIndex;

        for (int i = 0; i < GV_Billdesk.Rows.Count; i++)
        {
            DropDownList ddl_Receipt = GV_Billdesk.Rows[i].FindControl("ddlReceipt") as DropDownList;
            HiddenField hdn_PID = GV_Billdesk.Rows[i].FindControl("hdnPID") as HiddenField;
            HiddenField hdnBillNo = GV_Billdesk.Rows[i].FindControl("hdn_BillNo") as HiddenField;
            HiddenField hdnFID = GV_Billdesk.Rows[i].FindControl("Hdnfid") as HiddenField;
            Patmstd_Bal_C PBC = new Patmstd_Bal_C();
           
            if (ddl_Receipt.SelectedIndex > 0)
            {
                if (ddl_Receipt.SelectedIndex > 1)
                {
                    if (RowIndex1 == i)
                    {
                        #region MyRegion
                        string sql = "";
                        SqlConnection conn = DataAccess.ConInitForDC();
                        SqlCommand sc = conn.CreateCommand();
                        string CounCode = PBC.GetSMSString_CountryCode("Registration", Convert.ToInt16(Session["Branchid"]));
                        
                             sc.CommandText = "ALTER VIEW [dbo].[VW_csrstvw] AS (SELECT     patmst.PatRegID, patmst.intial, patmst.Patname,  patmst.sex, patmst.Age,     patmst.Drname, patmst.TelNo, DrMT.DoctorCode, DrMT.DoctorName, " +
                              "   MainTest.Maintestname, MainTest.MTCode,     patmstd.TestRate, PackMst.PackageName, patmstd.PackageCode, patmst.Patusername,   " +
                              "   patmst.Patpassword, patmst.MDY, patmst.Remark AS PatientRemark, patmst.Pataddress,  " +
                              "   patmst.PPID, VW_billreceipt_new.PaymentType as UnitCode, VW_billreceipt_new.BillNo, VW_billreceipt_new.Paymenttype, VW_billreceipt_new.billdate,    " +
                              "   VW_billreceipt_new.AmtPaid AS AmtPaid, VW_billreceipt_new.DisAmt, VW_billreceipt_new.TaxAmount ,VW_billreceipt_new.ReceiptNo " +
                              "   FROM         patmst INNER JOIN    DrMT ON patmst.Centercode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN  " +
                              "   MainTest INNER JOIN " +
                              "   patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON     patmst.PID = patmstd.PID AND " +
                               "  patmst.Branchid = patmstd.Branchid INNER JOIN    VW_billreceipt_new ON patmstd.PID = VW_billreceipt_new.PID LEFT OUTER JOIN   " +
                               "  PackMst ON patmstd.Branchid = PackMst.branchid AND     patmstd.PackageCode = PackMst.PackageCode where DrMT.DrType='CC' and patmst.branchid=" + Session["Branchid"].ToString() + "  and VW_billreceipt_new.FID="+hdnFID.Value+" and VW_billreceipt_new.ReceiptNo=" + ddl_Receipt.SelectedValue + ")";// 
                         
                        conn.Open();
                        sc.ExecuteNonQuery();
                        conn.Close(); conn.Dispose();
                        #endregion
                        Session.Add("rptsql", sql);
                        Session["rptname"] = Server.MapPath("~/DiagnosticReport/Rpt_Receipt.rpt");
                        Session["reportname"] = "CashBillReceipt";
                        Session["RPTFORMAT"] = "pdf";

                        ReportParameterClass.SelectionFormula = sql;
                        string close = "<script language='javascript'>javascript:OpenReport();</script>";
                        Type title1 = this.GetType();
                        Page.ClientScript.RegisterStartupScript(title1, "", close);
                    }
                }
                else
                {

                    if (RowIndex1 == i)
                    {
                        #region MyRegion
                        string sql = "";
                        SqlConnection conn = DataAccess.ConInitForDC();
                        SqlCommand sc = conn.CreateCommand();
                        string CounCode = PBC.GetSMSString_CountryCode("Registration", Convert.ToInt16(Session["Branchid"]));
                        if (CounCode.Length == 2)
                        {
                            sc.CommandText = "ALTER VIEW [dbo].[VW_cshbill] AS (SELECT  dbo.Cshmst.BillNo, dbo.Cshmst.RecDate, dbo.Cshmst.BillType, dbo.Cshmst.AmtReceived,  dbo.Cshmst.Discount, dbo.Cshmst.NetPayment,   dbo.Cshmst.AmtPaid,   dbo.Cshmst.Balance,  dbo.Cshmst.username, " +
                        "  dbo.Cshmst.OtherCharges,dbo.patmst.PatRegID, dbo.patmst.intial, dbo.patmst.Patname,   dbo.patmst.sex, dbo.patmst.Age, dbo.patmst.Drname,  " +
                        "  dbo.patmst.TelNo, dbo.DrMT.DoctorCode, dbo.Cshmst.CardNo as DoctorName, dbo.MainTest.Maintestname,   dbo.MainTest.MTCode,  dbo.patmstd.TestRate, " +
                        "  dbo.PackMst.PackageName, dbo.patmstd.PackageCode, dbo.Cshmst.DisFlag,    dbo.patmst.Patusername,   dbo.patmst.Patpassword,  " +
                        "  dbo.Cshmst.Comment,dbo.patmst.MDY,dbo.patmst.Remark AS PatientRemark,dbo.patmst.Pataddress,   dbo.patmst.PPID ,dbo.Cshmst.Paymenttype as UnitCode ,   " +
                        "  Cshmst.TaxAmount, Cshmst.TaxPer, RecM.PrintCount as PrintCount , patmst.OtherRefDoctor ,RecM.ReceiptNo , dbo.Cshmst.OtherChargeRemark  " +
                        //"  FROM         patmst INNER JOIN " +
                        //"  DrMT ON patmst.CenterCode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN " +
                        //"  Cshmst INNER JOIN " +
                        //"  MainTest INNER JOIN " +
                        //"  patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON Cshmst.PID = patmstd.PID AND " +
                        //"  Cshmst.Branchid = patmstd.Branchid ON patmst.PID = patmstd.PID AND patmst.Branchid = patmstd.Branchid INNER JOIN " +
                        //"  RecM ON Cshmst.BillNo = RecM.BillNo AND Cshmst.PID = RecM.PID AND Cshmst.Branchid = RecM.branchid LEFT OUTER JOIN " +
                        //"  PackMst ON patmstd.Branchid = PackMst.branchid AND patmstd.PackageCode = PackMst.PackageCode "+
                       "  FROM         patmst INNER JOIN "+
                 "   DrMT ON patmst.CenterCode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN "+
                 "   Cshmst INNER JOIN "+
                 "   MainTest INNER JOIN "+
                 "   patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON Cshmst.PID = patmstd.PID AND "+
                 "   Cshmst.Branchid = patmstd.Branchid ON patmst.PID = patmstd.PID AND patmst.Branchid = patmstd.Branchid INNER JOIN "+
                 "   RecM ON Cshmst.BillNo = RecM.BillNo AND Cshmst.PID = RecM.PID AND Cshmst.FID = RecM.FID LEFT OUTER JOIN "+
                 "   PackMst ON patmstd.Branchid = PackMst.branchid AND patmstd.PackageCode = PackMst.PackageCode "+
                            " where DrMT.DrType='CC' and patmst.branchid=" + Session["Branchid"].ToString() + " and Cshmst.PID=" + hdn_PID.Value + " and ReceiptNo=" + ddl_Receipt.SelectedValue + " )";// 

                        }
                        else
                        {

                            sc.CommandText = "ALTER VIEW [dbo].[VW_cshbill] AS (SELECT  dbo.Cshmst.BillNo, dbo.Cshmst.RecDate, dbo.Cshmst.BillType, dbo.Cshmst.AmtReceived,  dbo.Cshmst.Discount, dbo.Cshmst.NetPayment,   dbo.RecM.AmtPaid,   dbo.Cshmst.Balance,  dbo.Cshmst.username, " +
                          "  dbo.Cshmst.OtherCharges,dbo.patmst.PatRegID, dbo.patmst.intial, dbo.patmst.Patname,   dbo.patmst.sex, dbo.patmst.Age, dbo.patmst.Drname,  " +
                          "  dbo.patmst.TelNo, dbo.DrMT.DoctorCode, dbo.Cshmst.CardNo as DoctorName, dbo.MainTest.Maintestname,   dbo.MainTest.MTCode,  dbo.patmstd.TestRate, " +
                          "  dbo.PackMst.PackageName, dbo.patmstd.PackageCode, dbo.Cshmst.DisFlag,    dbo.patmst.Patusername,   dbo.patmst.Patpassword,  " +
                          "  dbo.Cshmst.Comment,dbo.patmst.MDY,dbo.patmst.Remark AS PatientRemark,dbo.patmst.Pataddress,   dbo.patmst.PPID ,dbo.Cshmst.Paymenttype as UnitCode ,   " +
                          "  Cshmst.TaxAmount, Cshmst.TaxPer, RecM.PrintCount as PrintCount , patmst.OtherRefDoctor  ,RecM.ReceiptNo , dbo.Cshmst.OtherChargeRemark " +
                       "    FROM         patmst INNER JOIN "+
                 "   DrMT ON patmst.CenterCode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN "+
                 "   Cshmst INNER JOIN "+
                 "   MainTest INNER JOIN "+
                 "   patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON Cshmst.PID = patmstd.PID AND "+
                 "   Cshmst.Branchid = patmstd.Branchid ON patmst.PID = patmstd.PID AND patmst.Branchid = patmstd.Branchid INNER JOIN "+
                 "   RecM ON Cshmst.BillNo = RecM.BillNo AND Cshmst.PID = RecM.PID AND Cshmst.FID = RecM.FID LEFT OUTER JOIN "+
                 "   PackMst ON patmstd.Branchid = PackMst.branchid AND patmstd.PackageCode = PackMst.PackageCode "+
                          //"  FROM         patmst INNER JOIN " +
                          //"  DrMT ON patmst.CenterCode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN " +
                          //"  Cshmst INNER JOIN " +
                          //"  MainTest INNER JOIN " +
                          //"  patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON Cshmst.PID = patmstd.PID AND " +
                          //"  Cshmst.Branchid = patmstd.Branchid ON patmst.PID = patmstd.PID AND patmst.Branchid = patmstd.Branchid INNER JOIN " +
                          //"  RecM ON Cshmst.BillNo = RecM.BillNo AND Cshmst.PID = RecM.PID AND Cshmst.Branchid = RecM.branchid LEFT OUTER JOIN " +
                          //"  PackMst ON patmstd.Branchid = PackMst.branchid AND patmstd.PackageCode = PackMst.PackageCode  "+
                           " where DrMT.DrType='CC' and patmst.branchid=" + Session["Branchid"].ToString() + " and Cshmst.PID=" + hdn_PID.Value + " and ReceiptNo=" + ddl_Receipt.SelectedValue + " )";// 
                        }
                       // sc.CommandText = "ALTER VIEW [dbo].[VW_csrstvw] AS (SELECT     patmst.PatRegID, patmst.intial, patmst.Patname,  patmst.sex, patmst.Age,     patmst.Drname, patmst.TelNo, DrMT.DoctorCode, DrMT.DoctorName, " +
                       //"   MainTest.Maintestname, MainTest.MTCode,     patmstd.TestRate, PackMst.PackageName, patmstd.PackageCode, patmst.Patusername,   " +
                       //"   patmst.Patpassword, patmst.MDY, patmst.Remark AS PatientRemark, patmst.Pataddress,  " +
                       //"   patmst.PPID, patmst.UnitCode, VW_billreceipt_new.BillNo, VW_billreceipt_new.Paymenttype, VW_billreceipt_new.billdate,    " +
                       //"   VW_billreceipt_new.AmtPaid AS AmtPaid, VW_billreceipt_new.DisAmt, VW_billreceipt_new.TaxAmount  " +
                       //"   FROM         patmst INNER JOIN    DrMT ON patmst.Centercode = DrMT.DoctorCode AND patmst.Branchid = DrMT.Branchid INNER JOIN  " +
                       //"   MainTest INNER JOIN " +
                       //"   patmstd ON MainTest.MTCode = patmstd.MTCode AND MainTest.Branchid = patmstd.Branchid ON     patmst.PID = patmstd.PID AND " +
                       // "  patmst.Branchid = patmstd.Branchid INNER JOIN    VW_billreceipt_new ON patmstd.PID = VW_billreceipt_new.PID LEFT OUTER JOIN   " +
                       // "  PackMst ON patmstd.Branchid = PackMst.branchid AND     patmstd.PackageCode = PackMst.PackageCode where DrMT.DrType='CC' and patmst.branchid=" + Session["Branchid"].ToString() + " and VW_billreceipt_new.ReceiptNo=" + ddl_Receipt.SelectedValue + ")";// 

                        conn.Open();
                        sc.ExecuteNonQuery();
                        conn.Close(); conn.Dispose();
                        #endregion


                        Session.Add("rptsql", sql);
                        Session["rptname"] = Server.MapPath("~/DiagnosticReport/Rpt_PayReceipt.rpt");
                        Session["reportname"] = "CashReceipt";
                        Session["RPTFORMAT"] = "pdf";

                        ReportParameterClass.SelectionFormula = sql;
                        string close = "<script language='javascript'>javascript:OpenReport();</script>";
                        Type title1 = this.GetType();
                        Page.ClientScript.RegisterStartupScript(title1, "", close);
                      //   PBC.Update_PrintCount_ReceiptNo(Convert.ToInt32(Session["Branchid"]), Convert.ToInt32(hdn_PID.Value), Convert.ToInt32( ddl_Receipt.SelectedValue));
                        Session["PID_report"] = Convert.ToInt32(hdn_PID.Value);
                        Session["RecNo_report"] = Convert.ToInt32(ddl_Receipt.SelectedValue);
                    }
                }
            }
        }
       
    }
}